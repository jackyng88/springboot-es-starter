# Spring server config
# server.port=8080
# spring.application.name=spring-boot-es-app


# Event Streams connection configuration
spring.kafka.jaas.enabled=true
spring.kafka.jaas.login-module=org.apache.kafka.common.security.plain.PlainLoginModule
spring.kafka.bootstrap-servers=es-0-ibm-es-proxy-route-bootstrap-eventstreams.mycluster-4312-cp4i-afb9c6047b062b44e3f1b3ecfeba4309-0000.sjc03.containers.appdomain.cloud:443

# Event Streams security options.
# Note that the Spring Kafka library expects truststore-location to be in src/webapp/...
spring.kafka.jaas.options.username=token
spring.kafka.jaas.options.password=ej6ndCeoeFzejBrbeqRt-vJRY3UyQZhBSU9_yssI7zZE
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.ssl.protocol=TLSv1.2
spring.kafka.ssl.truststore-location=/ssl/es-cert.jks
spring.kafka.ssl.truststore-password=password

# Kafka Producer
spring.kafka.template.default-topic=jng-test
spring.kafka.producer.client-id=event-streams-kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Consumer
# listener.topic=jng-test
spring.kafka.consumer.group-id=jng-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer